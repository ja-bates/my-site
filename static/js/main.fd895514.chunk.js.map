{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","particlesOptions","particles","number","value","density","enable","value_area","Document","react_default","a","createElement","src_HomePage","src_About","src_Projects","src_Contact","React","Component","HomePage","className","href","particles_default","params","About","id","src","alt","Projects","open","onClick","this","goToEcoSphere","goToParkN","frameborder","allowfullscreen","Contact","goToGithub","index_esm","goToLinkedin","ReactDOM","render","src_Document","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fd895514.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Particles from 'react-particles-js'\nimport './App.css';\nimport { FaGithub } from 'react-icons/fa';\nimport { FaLinkedin } from 'react-icons/fa';\n\n\nconst particlesOptions = {\n    particles: {\n        number: {\n            value: 150,\n            density: {\n                enable: true,\n                value_area: 800\n            }\n        }\n    }\n}\n\nclass Document extends React.Component {\n    render() {\n        return(\n            <div>\n                <HomePage />\n                <About />\n                <Projects />\n                <Contact />\n\n            </div>\n        )\n    }\n}\n\nclass HomePage extends React.Component {\n    render() {\n        return (\n            <div>\n                <div className=\"Header\">\n                    <li className=\"TopButtons\"> <a href=\"#con\"> Contact </a> </li>\n                    <li className=\"TopButtons\"> <a href=\"#pro\"> Projects </a> </li>\n                    <li className=\"TopButtons\"> <a href=\"#ab\"> About </a></li>\n                    <h1 className=\"Name\"> James<b>Bates</b> </h1>\n                </div>\n                <div>\n                    <Particles className='particles' params={particlesOptions} />\n                </div>\n                <div className=\"Empty\">\n\n                </div>\n            </div>\n        )\n    }\n}\n\nclass About extends React.Component {\n    render() {\n        return (\n            <div id=\"ab\" className=\"About\">\n                <div className=\"Bio\">\n                    <img src=\"./images/ProfilePic.jpg\" alt=\"Me\" />\n                    <h1> <u>About</u> </h1>\n                    <p> Hi, I'm James! I'm studying Mechanical Engineering at the University of Waterloo with hopes of specializing in Mechatronics. Throughout my 6 co-op terms I would like to experiment working in various industries. I have experience in control system / backend design most fluently in <b>C++, Python </b>and <b>MatLab</b>. Additionally, I enjoy the artistic side of front-end development in which I am most familiar using <b>ReactJS</b>. Similarly, I have experience in Mechanical Design using <b>Solidworks</b>, <b>AutoCAD</b>, <b>GD&T</b> and free-hand sketching. </p>\n                    <p> On a more personal side, I enjoy sports and have represented Canada at the Latin American Baseball Classic in the Dominican Republic, played for Team BC indoor and beach volleyball where I placed 4th at North America's largest beach volleyball tournament. Additionally, I love to travel, try new foods and get out of my comfort zone! Some of my favourite memories include eating live octopus in China, Kite Surfing alongside Seals in Squamish and hiking the beautiful Bryce Canyon in Utah. </p>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Projects extends React.Component {\n\n    goToParkN()\n    {\n        window.open(\"https://devpost.com/software/parkn\");\n    }\n\n    goToEcoSphere()\n    {\n        window.open(\"https://devpost.com/software/ecosphere\");\n    }\n\n    render() {\n        return(\n            <div id=\"pro\" className=\"Proj\">\n                <div className=\"Projbubble\">\n                    <h1> <u> Projects </u> </h1>\n                    <hr/>\n                    <div className=\"box\">\n                        <img src=\"./images/ecoSphere.png\" alt=\"EcoSphere\" />\n                        <h1> <b>EcoSphere</b> </h1>\n                        <p> EcoSphere is an educational <b>android application</b> developed to encourage recycling! It was developed in <b>7 hours</b> at <b>ECOding Hacks</b> and received an <b>honorable mention</b>. EcoSphere was designed so that users can track their recycling habits while being encouraged by an aesthetic, game-like interface. Furthermore, when first opening the app, the background is gross, dirty and clearly polluted, but as you recycle, the environment cleanses and will eventually become a beautiful ecosystem.  </p>\n                        <p> This application was developed using <b>Corona SDK</b> (written in <b>Lua</b>); however, the graphics were done using <b>Adobe Photoshop</b>. </p>\n                        <button className=\"button\" onClick={this.goToEcoSphere}> See DevPost </button>\n\n                    </div>\n                    <hr/>\n                    <div className=\"box\">\n                        <img id=\"pk\" src=\"./images/ParkN.jpg\" alt=\"ParkN\" />\n                        <h1> <b> ParkN </b></h1>\n                        <p> ParkN is a <b>web application</b> designed to make parking quicker and easier! Since everyone knows parking can be frustrating, ParkN allows users to enter a location and search for parking spot to rent. It is even possible to book ahead so you can be guaranteed a spot upon arrival. Similarly, users can rent their own parking spots when, for example, they are away from home or going on a trip.  </p>\n                        <p> This application was created at <b> StarterHacks</b>, my first Hackathon. Furthermore, I worked on the front-end of this application that was built using <b> ReactJS </b> and features <b> React Routers </b> along with implementation of the <b> Google Maps API </b> </p>\n                        <button className=\"button\" onClick={this.goToParkN}> See DevPost </button>\n                    </div>\n                    <hr/>\n                    <div className=\"box\">\n                        <iframe className=\"vid\" src=\"https://youtube.com/embed/WE163DhiTGk\" frameborder=\"0\" allowfullscreen> </iframe>\n                        <h1> <b> Glider </b></h1>\n                        <p> The Glider project involved the design, building and testing of a glider that could carry an egg as far as possible without it breaking. This project was under <b>sponsorship from Boeing</b> as they agreed to give us an insider engineering workshop/tour inside their Seattle. Furthermore, I was responsible for designing and constructing the <b>dihedral</b> of the aircraft, building a <b>charged Nichrome Cutting Wire </b> to shape the Composite foam and correcting the position of the center of mass relative to the lift force in order to create smooth flight.   </p>\n                    </div>\n                    <hr/>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nclass Contact extends React.Component {\n\n    goToGithub()\n    {\n        window.open(\"https://github.com/ja-bates\");\n    }\n\n    goToLinkedin()\n    {\n        window.open(\"https://www.linkedin.com/in/j4bates/\");\n    }\n\n    render() {\n        return(\n            <div id=\"con\" className=\"contact\">\n                <div className=\"contactbubble\">\n                    <h1> <u> Contact </u></h1>\n                    <hr/>\n                    <p> Hope you enjoyed my site! </p>\n                    <p2> Connect with me on LinkedIn, check out my work on Github, or just send me an email! </p2>\n                    <br/>\n                    <p3> <a>jabates@uwaterloo.ca</a> </p3>\n                    <div>\n                        <button className=\"conbut\" onClick={this.goToGithub}><FaGithub /> GitHub </button>\n                        <button className=\"conbut\" onClick={this.goToLinkedin}><FaLinkedin /> LinkedIn </button>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<Document />, document.getElementById('root'));\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}